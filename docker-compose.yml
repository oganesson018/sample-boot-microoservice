version: '3.8'

services:
  # Eureka Naming Server - Ultra minimal
  naming-server:
    build:
      context: ./naming-server
    container_name: eureka-naming-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-network
    # Ultra-minimal resource allocation
    mem_limit: 128m
    cpus: 0.25
    # Remove unnecessary features
    init: false
    tty: false
    stdin_open: false

  # Hello Service - Ultra minimal
  hello-service:
    build:
      context: ./hello-service
    container_name: hello-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
      # Spring Boot retry and startup configuration
      - EUREKA_CLIENT_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS=5
      - EUREKA_CLIENT_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS=10
      - EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS=3
      - EUREKA_CLIENT_INSTANCE_REGISTRATION_ENABLED=true
      - EUREKA_CLIENT_INITIAL_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS=5
      - EUREKA_CLIENT_EUREKA_SERVER_CONNECT_TIMEOUT_SECONDS=30
      - EUREKA_CLIENT_EUREKA_SERVER_READ_TIMEOUT_SECONDS=30
      # Spring Boot startup configuration
      - SPRING_CLOUD_DISCOVERY_CLIENT_FAIL_FAST=false
      - SPRING_CLOUD_DISCOVERY_CLIENT_REGISTER_HEALTH_INDICATOR=false
    networks:
      - microservice-network
    depends_on:
      - naming-server
    # Ultra-minimal resource allocation
    mem_limit: 128m
    cpus: 0.25
    # Remove unnecessary features
    init: false
    tty: false
    stdin_open: false

networks:
  microservice-network:
    driver: bridge
